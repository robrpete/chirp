import { SignInButton, useUser } from "@clerk/nextjs";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { LoadingPage } from "~/components/loading";
dayjs.extend(relativeTime);

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if(postsLoading) return <LoadingPage/>;

  if(!data) return <div>Something went wrong!</div>

  return(
    <div>
      {data.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id}/>
      ))}
    </div>
  )
}

const Home: NextPage = () => {
  const { isLoaded: userLoaded, isSignedIn } = useUser();
  api.posts.getAll.useQuery();

  if(!userLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full md:max-w-2xl border-x border-slate-400">
          <div className="flex border-b border-slate-400 p-4">
            {!isSignedIn && <div className="flex justify-center"><SignInButton /></div>}
            {isSignedIn && <CreatePostWizard/>}
          </div>
          <Feed/>
        </div>
      </main>
    </>
  );
};

export default Home;

const CreatePostWizard = () => {
  const { user } = useUser();
  console.log(user)
  if(!user) return null;

  return(
    <div className="flex gap-3 w-full">
      <Image 
        src={user.profileImageUrl}
        height={54}
        width={54}
        className="rounded-full" 
        alt="Profile Image"/>
        <input 
          type="text" 
          placeholder="Type some emojis!"
          className="bg-transparent grow outline-none"/>
    </div>
  )
}


type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return(
    <div
      key={post.id}
      className="flex border-b border-slate-400 p-4 gap-3"
      >
        <Image 
          src={author.profileImageUrl} 
          alt="Profile image"
          height={54}
          width={54}
          className="rounded-full"/>
        <div className="flex flex-col">
          <div className="flex gap-1 text-slate-400">
            <span className="text-slate-200">{author.username}</span>
            <span>{`@${author.username}`}</span>
            Â·
            <span>{`${dayjs(post.createdAt).fromNow()}`}</span>
          </div>
          <span>{post.content}</span>
        </div>
    </div>
  )
}